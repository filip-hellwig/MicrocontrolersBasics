
LB1.3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000122  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000122  000001b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  0080006a  0080006a  000001c0  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__vector_7>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e2       	ldi	r30, 0x22	; 34
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 37       	cpi	r26, 0x72	; 114
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 62 00 	call	0xc4	; 0xc4 <main>
  8a:	0c 94 8f 00 	jmp	0x11e	; 0x11e <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <TimerInit>:
  92:	8e b5       	in	r24, 0x2e	; 46
  94:	88 60       	ori	r24, 0x08	; 8
  96:	8e bd       	out	0x2e, r24	; 46
  98:	8e b5       	in	r24, 0x2e	; 46
  9a:	84 60       	ori	r24, 0x04	; 4
  9c:	8e bd       	out	0x2e, r24	; 46
  9e:	89 e0       	ldi	r24, 0x09	; 9
  a0:	9d e3       	ldi	r25, 0x3D	; 61
  a2:	9b bd       	out	0x2b, r25	; 43
  a4:	8a bd       	out	0x2a, r24	; 42
  a6:	89 b7       	in	r24, 0x39	; 57
  a8:	80 61       	ori	r24, 0x10	; 16
  aa:	89 bf       	out	0x39, r24	; 57
  ac:	08 95       	ret

000000ae <seg7Init>:
  ae:	8f ef       	ldi	r24, 0xFF	; 255
  b0:	84 bb       	out	0x14, r24	; 20
  b2:	15 ba       	out	0x15, r1	; 21
  b4:	08 95       	ret

000000b6 <seg7ShowCyfra>:
  b6:	e0 e6       	ldi	r30, 0x60	; 96
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	e8 0f       	add	r30, r24
  bc:	f1 1d       	adc	r31, r1
  be:	80 81       	ld	r24, Z
  c0:	85 bb       	out	0x15, r24	; 21
  c2:	08 95       	ret

000000c4 <main>:
  c4:	0e 94 49 00 	call	0x92	; 0x92 <TimerInit>
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	84 bb       	out	0x14, r24	; 20
  cc:	15 ba       	out	0x15, r1	; 21
  ce:	78 94       	sei
  d0:	20 e0       	ldi	r18, 0x00	; 0
  d2:	48 ec       	ldi	r20, 0xC8	; 200
  d4:	50 e0       	ldi	r21, 0x00	; 0
  d6:	e2 2f       	mov	r30, r18
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	e0 5a       	subi	r30, 0xA0	; 160
  dc:	ff 4f       	sbci	r31, 0xFF	; 255
  de:	80 81       	ld	r24, Z
  e0:	85 bb       	out	0x15, r24	; 21
  e2:	80 e1       	ldi	r24, 0x10	; 16
  e4:	97 e2       	ldi	r25, 0x27	; 39
  e6:	fa 01       	movw	r30, r20
  e8:	31 97       	sbiw	r30, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <main+0x24>
  ec:	01 97       	sbiw	r24, 0x01	; 1
  ee:	d9 f7       	brne	.-10     	; 0xe6 <main+0x22>
  f0:	2f 5f       	subi	r18, 0xFF	; 255
  f2:	2a 30       	cpi	r18, 0x0A	; 10
  f4:	80 f3       	brcs	.-32     	; 0xd6 <main+0x12>
  f6:	20 e0       	ldi	r18, 0x00	; 0
  f8:	ee cf       	rjmp	.-36     	; 0xd6 <main+0x12>

000000fa <__vector_7>:
  fa:	1f 92       	push	r1
  fc:	0f 92       	push	r0
  fe:	0f b6       	in	r0, 0x3f	; 63
 100:	0f 92       	push	r0
 102:	11 24       	eor	r1, r1
 104:	8f 93       	push	r24
 106:	9f 93       	push	r25
 108:	88 b3       	in	r24, 0x18	; 24
 10a:	91 e0       	ldi	r25, 0x01	; 1
 10c:	89 27       	eor	r24, r25
 10e:	88 bb       	out	0x18, r24	; 24
 110:	9f 91       	pop	r25
 112:	8f 91       	pop	r24
 114:	0f 90       	pop	r0
 116:	0f be       	out	0x3f, r0	; 63
 118:	0f 90       	pop	r0
 11a:	1f 90       	pop	r1
 11c:	18 95       	reti

0000011e <_exit>:
 11e:	f8 94       	cli

00000120 <__stop_program>:
 120:	ff cf       	rjmp	.-2      	; 0x120 <__stop_program>
